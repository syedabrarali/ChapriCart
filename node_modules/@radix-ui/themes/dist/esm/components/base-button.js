import * as React from 'react';
import classNames from 'classnames';
import { Slot } from '@radix-ui/react-slot';
import { baseButtonPropDefs } from './base-button.props';
import { extractMarginProps, withMarginProps, withBreakpoints } from '../helpers';
const BaseButton = React.forwardRef((props, forwardedRef) => {
    const { rest: marginRest, ...marginProps } = extractMarginProps(props);
    const { className, asChild = false, size = baseButtonPropDefs.size.default, variant = baseButtonPropDefs.variant.default, color = baseButtonPropDefs.color.default, highContrast = baseButtonPropDefs.highContrast.default, radius = baseButtonPropDefs.radius.default, ...baseButtonProps } = marginRest;
    const Comp = asChild ? Slot : 'button';
    return (React.createElement(Comp, { "data-accent-color": color, "data-radius": radius, ...baseButtonProps, ref: forwardedRef, className: classNames('rt-reset-button', 'rt-reset-a', 'rt-BaseButton', className, withBreakpoints(size, 'rt-r-size'), `rt-variant-${variant}`, { 'rt-high-contrast': highContrast }, withMarginProps(marginProps)) }));
});
BaseButton.displayName = 'BaseButton';
export { BaseButton };
//# sourceMappingURL=base-button.js.map